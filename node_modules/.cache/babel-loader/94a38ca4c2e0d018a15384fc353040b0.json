{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\OneDrive\\\\Documents\\\\DSC\\\\Project\\\\front\\\\login-signup-demo\\\\src\\\\Components\\\\FileUpload.js\";\nimport React from 'react';\nimport axios, { post } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault(); // Stop form submit\n\n    this.fileUpload(this.state.file).then(response => {\n      console.log(response.data);\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  onCategoryChange(e) {\n    this.setState({\n      gender: e.target.value\n    });\n    console.log(gender);\n  }\n\n  fileUpload(file) {\n    const url = \"http://10.0.0.129:5000/api/upload\"; //const url = 'http://example.com/file-upload';\n\n    const formData = new FormData();\n    formData.append('file', file); //console.log(formData)\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return post(url, formData, config);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.gender,\n          onChange: this.onCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Grocery\",\n            children: \" Grocery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Shopping\",\n            children: \"Shopping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Rent\",\n            children: \" Rent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"House Maintainence\",\n            children: \" Maintainence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FileUpload; // import React, { Component } from \"react\";\n// import UploadService from \"../services/upload-file.service\";\n// export default class UploadFiles extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.selectFile = this.selectFile.bind(this);\n//     this.upload = this.upload.bind(this);\n//     this.state = {\n//       selectedFiles: undefined,\n//       currentFile: undefined,\n//       progress: 0,\n//       message: \"\",\n//       fileInfos: [],\n//     };\n//   }\n//   componentDidMount() {\n//     UploadService.getFiles().then((response) => {\n//       this.setState({\n//         fileInfos: response.data,\n//       });\n//     });\n//   }\n//   selectFile(event) {\n//     this.setState({\n//       selectedFiles: event.target.files,\n//     });\n//   }\n//   upload() {\n//     let currentFile = this.state.selectedFiles[0];\n//     this.setState({\n//       progress: 0,\n//       currentFile: currentFile,\n//     });\n//     UploadService.upload(currentFile, (event) => {\n//       this.setState({\n//         progress: Math.round((100 * event.loaded) / event.total),\n//       });\n//     })\n//       .then((response) => {\n//         this.setState({\n//           message: response.data.message,\n//         });\n//         return UploadService.getFiles();\n//       })\n//       .then((files) => {\n//         this.setState({\n//           fileInfos: files.data,\n//         });\n//       })\n//       .catch(() => {\n//         this.setState({\n//           progress: 0,\n//           message: \"Could not upload the file!\",\n//           currentFile: undefined,\n//         });\n//       });\n//     this.setState({\n//       selectedFiles: undefined,\n//     });\n//   }\n//   render() {\n//     const {\n//       selectedFiles,\n//       currentFile,\n//       progress,\n//       message,\n//       fileInfos,\n//     } = this.state;\n//     return (\n//       <div>\n//         {currentFile && (\n//           <div className=\"progress\">\n//             <div\n//               className=\"progress-bar progress-bar-info progress-bar-striped\"\n//               role=\"progressbar\"\n//               aria-valuenow={progress}\n//               aria-valuemin=\"0\"\n//               aria-valuemax=\"100\"\n//               style={{ width: progress + \"%\" }}\n//             >\n//               {progress}%\n//             </div>\n//           </div>\n//         )}\n//         <label className=\"btn btn-default\">\n//           <input type=\"file\" onChange={this.selectFile} />\n//         </label>\n//         <button\n//           className=\"btn btn-success\"\n//           disabled={!selectedFiles}\n//           onClick={this.upload}\n//         >\n//           Upload\n//         </button>\n//         <div className=\"alert alert-light\" role=\"alert\">\n//           {message}\n//         </div>\n//         <div className=\"card\">\n//           <div className=\"card-header\">List of Files</div>\n//           <ul className=\"list-group list-group-flush\">\n//             {fileInfos &&\n//               fileInfos.map((file, index) => (\n//                 <li className=\"list-group-item\" key={index}>\n//                   <a href={file.url}>{file.name}</a>\n//                 </li>\n//               ))}\n//           </ul>\n//         </div>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/arpit/OneDrive/Documents/DSC/Project/front/login-signup-demo/src/Components/FileUpload.js"],"names":["React","axios","post","FileUpload","Component","constructor","props","state","file","onFormSubmit","bind","onChange","fileUpload","onCategoryChange","e","preventDefault","then","response","console","log","data","setState","target","files","gender","value","url","formData","FormData","append","config","headers","render"],"mappings":"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":["import React from 'react'\r\nimport axios, { post } from 'axios';\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      file:null\r\n    }\r\n    this.onFormSubmit = this.onFormSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    this.fileUpload = this.fileUpload.bind(this)\r\n    this.onCategoryChange = this.onCategoryChange.bind(this);\r\n  }\r\n\r\n  onFormSubmit(e){\r\n    e.preventDefault() // Stop form submit\r\n    this.fileUpload(this.state.file).then((response)=>{\r\n      console.log(response.data);\r\n    })\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n\r\n  onCategoryChange(e){\r\n        this.setState({ gender: e.target.value });\r\n        console.log(gender)\r\n  }\r\n\r\n  fileUpload(file){\r\n    const url = \"http://10.0.0.129:5000/api/upload\";\r\n    //const url = 'http://example.com/file-upload';\r\n    const formData = new FormData();\r\n    formData.append('file',file)\r\n    //console.log(formData)\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    }\r\n    return  post(url, formData,config)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <h1>File Upload</h1>\r\n        <input type=\"file\" onChange={this.onChange} />\r\n        <button type=\"submit\">Upload</button>\r\n\r\n        <div>\r\n              <select value={this.state.gender} onChange={this.onCategoryChange}> \r\n                  <option name=\"Grocery\"> Grocery</option>\r\n                  <option name=\"Shopping\">Shopping</option>\r\n                  <option name=\"Rent\"> Rent</option>\r\n                  <option name=\"House Maintainence\"> Maintainence</option>\r\n              </select>\r\n        </div>\r\n\r\n\r\n        \r\n      </form>\r\n   )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FileUpload\r\n\r\n// import React, { Component } from \"react\";\r\n// import UploadService from \"../services/upload-file.service\";\r\n\r\n// export default class UploadFiles extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.selectFile = this.selectFile.bind(this);\r\n//     this.upload = this.upload.bind(this);\r\n\r\n//     this.state = {\r\n//       selectedFiles: undefined,\r\n//       currentFile: undefined,\r\n//       progress: 0,\r\n//       message: \"\",\r\n\r\n//       fileInfos: [],\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     UploadService.getFiles().then((response) => {\r\n//       this.setState({\r\n//         fileInfos: response.data,\r\n//       });\r\n//     });\r\n//   }\r\n\r\n//   selectFile(event) {\r\n//     this.setState({\r\n//       selectedFiles: event.target.files,\r\n//     });\r\n//   }\r\n\r\n//   upload() {\r\n//     let currentFile = this.state.selectedFiles[0];\r\n\r\n//     this.setState({\r\n//       progress: 0,\r\n//       currentFile: currentFile,\r\n//     });\r\n\r\n//     UploadService.upload(currentFile, (event) => {\r\n//       this.setState({\r\n//         progress: Math.round((100 * event.loaded) / event.total),\r\n//       });\r\n//     })\r\n//       .then((response) => {\r\n//         this.setState({\r\n//           message: response.data.message,\r\n//         });\r\n//         return UploadService.getFiles();\r\n//       })\r\n//       .then((files) => {\r\n//         this.setState({\r\n//           fileInfos: files.data,\r\n//         });\r\n//       })\r\n//       .catch(() => {\r\n//         this.setState({\r\n//           progress: 0,\r\n//           message: \"Could not upload the file!\",\r\n//           currentFile: undefined,\r\n//         });\r\n//       });\r\n\r\n//     this.setState({\r\n//       selectedFiles: undefined,\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     const {\r\n//       selectedFiles,\r\n//       currentFile,\r\n//       progress,\r\n//       message,\r\n//       fileInfos,\r\n//     } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         {currentFile && (\r\n//           <div className=\"progress\">\r\n//             <div\r\n//               className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n//               role=\"progressbar\"\r\n//               aria-valuenow={progress}\r\n//               aria-valuemin=\"0\"\r\n//               aria-valuemax=\"100\"\r\n//               style={{ width: progress + \"%\" }}\r\n//             >\r\n//               {progress}%\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         <label className=\"btn btn-default\">\r\n//           <input type=\"file\" onChange={this.selectFile} />\r\n//         </label>\r\n\r\n//         <button\r\n//           className=\"btn btn-success\"\r\n//           disabled={!selectedFiles}\r\n//           onClick={this.upload}\r\n//         >\r\n//           Upload\r\n//         </button>\r\n\r\n//         <div className=\"alert alert-light\" role=\"alert\">\r\n//           {message}\r\n//         </div>\r\n\r\n//         <div className=\"card\">\r\n//           <div className=\"card-header\">List of Files</div>\r\n//           <ul className=\"list-group list-group-flush\">\r\n//             {fileInfos &&\r\n//               fileInfos.map((file, index) => (\r\n//                 <li className=\"list-group-item\" key={index}>\r\n//                   <a href={file.url}>{file.name}</a>\r\n//                 </li>\r\n//               ))}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}