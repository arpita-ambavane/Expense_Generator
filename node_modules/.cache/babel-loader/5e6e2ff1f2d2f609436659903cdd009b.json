{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\OneDrive\\\\Documents\\\\DSC\\\\Project\\\\front\\\\login-signup-demo\\\\src\\\\Components\\\\FileUpload.js\";\n// import React from 'react'\n// import axios, { post } from 'axios';\n// import AuthService from \"../services/auth.service\";\n// const currentUser = AuthService.getCurrentUser();\n// console.log(currentUser)\n// class FileUpload extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state ={\n//       file:null\n//     }\n//     this.onFormSubmit = this.onFormSubmit.bind(this)\n//     this.onChange = this.onChange.bind(this)\n//     this.fileUpload = this.fileUpload.bind(this)\n//     this.onCategoryChange = this.onCategoryChange.bind(this);\n//   }\n//   onFormSubmit(e){\n//     e.preventDefault() // Stop form submit\n//     this.fileUpload(this.state.file).then((response)=>{\n//       console.log(response.data);\n//     })\n//   }\n//   onChange(e) {\n//     this.setState({file:e.target.files[0]})\n//   }\n//   onCategoryChange(e){\n//         this.setState({ gender: e.target.value });\n//         console.log(e.target.value)\n//   }\n//   fileUpload(file){\n//     const url = \"http://10.0.0.129:5000/api/upload\";\n//     //const url = 'http://example.com/file-upload';\n//     const formData = new FormData();\n//     formData.append('file',file)\n//     //console.log(formData)\n//     const config = {\n//         headers: {\n//             'content-type': 'multipart/form-data'\n//         }\n//     }\n//     return  post(url, formData,config)\n//   }\n//   const login = (username, password) => {\n//     return axios\n//       .post(API_URL + \"signin\", {\n//         username,\n//         password,\n//       })\n//       .then((response) => {\n//         const users = response.data\n//         console.log(response.data)\n//         if (response.data.accessToken) {\n//           localStorage.setItem(\"user\", JSON.stringify(users));\n//           console.log('users', users)\n//         }\n//         return response.data;\n//       });\n//   };\n//   render() {\n//     return (\n//       <form onSubmit={this.onFormSubmit}>\n//         <h1>File Upload</h1>\n//         <input type=\"file\" onChange={this.onChange} />\n//         <button type=\"submit\">Upload</button>\n//         <div>\n//               <select value={this.state.gender} onChange={this.onCategoryChange}> \n//                   <option name=\"Grocery\"> Grocery</option>\n//                   <option name=\"Shopping\">Shopping</option>\n//                   <option name=\"Rent\"> Rent</option>\n//                   <option name=\"House Maintainence\"> Maintainence</option>\n//               </select>\n//         </div>\n//       </form>\n//    )\n//   }\n// }\n// export default FileUpload\nimport React, { Component } from \"react\";\nimport UploadService from \"../services/upload-file.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      this.setState({\n        message: response.data.message\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progress + \"%\"\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-default\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        disabled: !selectedFiles,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-light\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"List of Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.url,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arpit/OneDrive/Documents/DSC/Project/front/login-signup-demo/src/Components/FileUpload.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","componentDidMount","getFiles","then","response","setState","data","event","target","files","Math","round","loaded","total","catch","render","width","map","file","index","url","name"],"mappings":"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","sourcesContent":["// import React from 'react'\r\n// import axios, { post } from 'axios';\r\n// import AuthService from \"../services/auth.service\";\r\n\r\n// const currentUser = AuthService.getCurrentUser();\r\n// console.log(currentUser)\r\n\r\n// class FileUpload extends React.Component {\r\n\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state ={\r\n//       file:null\r\n//     }\r\n//     this.onFormSubmit = this.onFormSubmit.bind(this)\r\n//     this.onChange = this.onChange.bind(this)\r\n//     this.fileUpload = this.fileUpload.bind(this)\r\n//     this.onCategoryChange = this.onCategoryChange.bind(this);\r\n//   }\r\n\r\n//   onFormSubmit(e){\r\n//     e.preventDefault() // Stop form submit\r\n//     this.fileUpload(this.state.file).then((response)=>{\r\n//       console.log(response.data);\r\n\r\n//     })\r\n//   }\r\n\r\n//   onChange(e) {\r\n//     this.setState({file:e.target.files[0]})\r\n//   }\r\n\r\n//   onCategoryChange(e){\r\n//         this.setState({ gender: e.target.value });\r\n//         console.log(e.target.value)\r\n//   }\r\n\r\n//   fileUpload(file){\r\n//     const url = \"http://10.0.0.129:5000/api/upload\";\r\n//     //const url = 'http://example.com/file-upload';\r\n//     const formData = new FormData();\r\n//     formData.append('file',file)\r\n//     //console.log(formData)\r\n//     const config = {\r\n//         headers: {\r\n//             'content-type': 'multipart/form-data'\r\n//         }\r\n//     }\r\n//     return  post(url, formData,config)\r\n//   }\r\n\r\n//   const login = (username, password) => {\r\n//     return axios\r\n//       .post(API_URL + \"signin\", {\r\n//         username,\r\n//         password,\r\n//       })\r\n//       .then((response) => {\r\n//         const users = response.data\r\n//         console.log(response.data)\r\n//         if (response.data.accessToken) {\r\n//           localStorage.setItem(\"user\", JSON.stringify(users));\r\n//           console.log('users', users)\r\n//         }\r\n  \r\n//         return response.data;\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.onFormSubmit}>\r\n//         <h1>File Upload</h1>\r\n//         <input type=\"file\" onChange={this.onChange} />\r\n//         <button type=\"submit\">Upload</button>\r\n\r\n//         <div>\r\n//               <select value={this.state.gender} onChange={this.onCategoryChange}> \r\n//                   <option name=\"Grocery\"> Grocery</option>\r\n//                   <option name=\"Shopping\">Shopping</option>\r\n//                   <option name=\"Rent\"> Rent</option>\r\n//                   <option name=\"House Maintainence\"> Maintainence</option>\r\n//               </select>\r\n//         </div>\r\n\r\n\r\n        \r\n//       </form>\r\n//    )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// export default FileUpload\r\n\r\nimport React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-file.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n\r\n      fileInfos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <label className=\"btn btn-default\">\r\n          <input type=\"file\" onChange={this.selectFile} />\r\n        </label>\r\n\r\n        <button\r\n          className=\"btn btn-success\"\r\n          disabled={!selectedFiles}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </button>\r\n\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <a href={file.url}>{file.name}</a>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}